{"ast":null,"code":"import _objectSpread from\"C:/Users/niall/Documents/GitHub/react-labs/mern-lab-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/niall/Documents/GitHub/react-labs/mern-lab-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Grid}from\"semantic-ui-react\";import axios from\"../../axios-orders\";import Menu from\"../../components/Menu/Menu\";import Order from\"../../components/Order/Order\";import Loader from\"../../components/Feedback/Loader/Loader\";import ErrorModal from\"../../components/Feedback/ErrorModal/ErrorModal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PizzaPal=function PizzaPal(props){// MENU, ERROR AND LOADING STATE AND GET TOPPINGS FROM FIREBASE\nvar _useState=useState({toppings:[]}),_useState2=_slicedToArray(_useState,2),menuState=_useState2[0],setMenuState=_useState2[1];var _useState3=useState({error:false,errorMessage:null}),_useState4=_slicedToArray(_useState3,2),errorState=_useState4[0],setErrorState=_useState4[1];var _useState5=useState({isLoading:true,loadFailed:false}),_useState6=_slicedToArray(_useState5,2),loadingState=_useState6[0],setLoadingState=_useState6[1];useEffect(function(){axios.get(\"/\").then(function(response){var sortedToppings=response.data.toppings.sort(function(a,b){return a.id-b.id;});setMenuState({toppings:sortedToppings});}).catch(function(error){var errorMsg=\"\";if(error.response){errorMsg=error.response.data.message;}else{errorMsg=\"There was a problem fetching the menu\";}setErrorState({error:true,errorMessage:errorMsg});setLoadingState({isLoading:false,loadFailed:menuState.loadFailed});console.log(error.response);});},[]);// ORDER STATE\n// Set order state conditionally - either to old order state or starting state\nvar _useState7=useState({totalPrice:props.location.state?props.location.state.order.totalPrice:5,chosenToppings:props.location.state?props.location.state.order.chosenToppings:[]}),_useState8=_slicedToArray(_useState7,2),orderState=_useState8[0],setOrderState=_useState8[1];// EVENT HANDLERS - ADD TOPPING\nvar addToppingHandler=function addToppingHandler(id){var order=_objectSpread({},orderState);// find the chosen topping in the menu\nvar menuIndex=menuState.toppings.findIndex(function(topping){return topping.id===id;});// check if the topping has already been added to the orderToppings array\nvar orderIndex=order.chosenToppings.findIndex(function(topping){return topping.id===id;});// if so, increase its count by 1\nif(orderIndex>-1){order.chosenToppings[orderIndex].count++;}// otherwise (i.e. this topping is being added for the first time)\n// create this topping and add it to the order toppings array\nelse{// Save the id, name and price of the chosen topping; set its count to 1\nvar chosenTopping={id:menuState.toppings[menuIndex].id,name:menuState.toppings[menuIndex].alt,price:menuState.toppings[menuIndex].price,count:1};order.chosenToppings.push(chosenTopping);}// Calculate the new price\nvar newPrice=orderState.totalPrice+menuState.toppings[menuIndex].price;// Update the order state with the new price and updated toppings array\nsetOrderState({totalPrice:newPrice,chosenToppings:order.chosenToppings});};// EVENT HANDLERS - REMOVE TOPPING\nvar removeToppingHandler=function removeToppingHandler(id){var order=_objectSpread({},orderState);// Find topping with matching id from the orderToppings\nvar index=order.chosenToppings.findIndex(function(topping){return topping.id===id;});// Get the current price\nvar price=order.totalPrice;// If topping was found, update the price and decrease the count\nif(index>=0){price=price-order.chosenToppings[index].price;order.chosenToppings[index].count--;// If the count is now 0, remove the topping completely\nif(order.chosenToppings[index].count<1){order.chosenToppings.splice(index,1);}}// Update order state with updated price and updated toppings array\nsetOrderState({totalPrice:price,chosenToppings:order.chosenToppings});};// EVENT HANDLERS - CHECK OUT\nvar checkoutHandler=function checkoutHandler(){props.history.push({pathname:\"place-order\",state:{order:orderState,menu:menuState.toppings}});};// ERROR HANDLER\nvar errorHandler=function errorHandler(){setErrorState({error:false,errorMessage:null});setLoadingState({isLoading:false,loadFailed:true});};// DISABLE CHECKOUT BUTTON IF NO TOPPINGS CHOSEN\nvar checkoutDisabled=true;if(orderState.chosenToppings.length>0){checkoutDisabled=false;}// DISPLAY PIZZA PAL MENU AND CONTROLS\nvar pizzapalMenu=errorState.error?/*#__PURE__*/_jsx(ErrorModal,{error:errorState.errorMessage,onClear:errorHandler}):/*#__PURE__*/_jsx(Loader,{active:loadingState.isLoading});if(menuState.toppings.length>0){pizzapalMenu=/*#__PURE__*/_jsxs(Grid,{divided:\"vertically\",stackable:true,children:[/*#__PURE__*/_jsx(Grid.Row,{centered:true,children:/*#__PURE__*/_jsx(Menu,{menu:menuState.toppings})}),/*#__PURE__*/_jsx(Order,{menu:menuState.toppings,toppingAdded:addToppingHandler,toppingRemoved:removeToppingHandler,chosenToppings:orderState.chosenToppings,totalPrice:orderState.totalPrice,checkout:checkoutHandler,disabled:checkoutDisabled})]});}else if(loadingState.loadFailed){pizzapalMenu=/*#__PURE__*/_jsx(\"p\",{children:\"We're having some issues loading the menu... Please try again later.\"});}return/*#__PURE__*/_jsx(\"div\",{children:pizzapalMenu});};export default PizzaPal;","map":{"version":3,"sources":["C:/Users/niall/Documents/GitHub/react-labs/mern-lab-3/frontend/src/containers/PizzaPal/PizzaPal.js"],"names":["React","useState","useEffect","Grid","axios","Menu","Order","Loader","ErrorModal","PizzaPal","props","toppings","menuState","setMenuState","error","errorMessage","errorState","setErrorState","isLoading","loadFailed","loadingState","setLoadingState","get","then","response","sortedToppings","data","sort","a","b","id","catch","errorMsg","message","console","log","totalPrice","location","state","order","chosenToppings","orderState","setOrderState","addToppingHandler","menuIndex","findIndex","topping","orderIndex","count","chosenTopping","name","alt","price","push","newPrice","removeToppingHandler","index","splice","checkoutHandler","history","pathname","menu","errorHandler","checkoutDisabled","length","pizzapalMenu"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nimport Menu from \"../../components/Menu/Menu\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport Loader from \"../../components/Feedback/Loader/Loader\";\r\nimport ErrorModal from \"../../components/Feedback/ErrorModal/ErrorModal\";\r\n\r\nconst PizzaPal = (props) => {\r\n\r\n  // MENU, ERROR AND LOADING STATE AND GET TOPPINGS FROM FIREBASE\r\n  const [menuState, setMenuState] = useState({\r\n    toppings: [],\r\n  });\r\n\r\n  const [errorState, setErrorState] = useState({\r\n    error: false,\r\n    errorMessage: null,\r\n  });\r\n\r\n  const [loadingState, setLoadingState] = useState({\r\n    isLoading: true,\r\n    loadFailed: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/\")\r\n      .then((response) => {\r\n        let sortedToppings = response.data.toppings.sort(function (a, b) {\r\n          return a.id - b.id;\r\n        });\r\n        setMenuState({ toppings: sortedToppings });\r\n      })\r\n      .catch((error) => {\r\n        let errorMsg = \"\";\r\n        if (error.response) {\r\n          errorMsg = error.response.data.message;\r\n        } else {\r\n          errorMsg = \"There was a problem fetching the menu\";\r\n        }\r\n        setErrorState({\r\n          error: true,\r\n          errorMessage: errorMsg,\r\n        });\r\n        setLoadingState({ isLoading: false, loadFailed: menuState.loadFailed });\r\n        console.log(error.response);\r\n      });\r\n  }, []);\r\n\r\n  // ORDER STATE\r\n\r\n  // Set order state conditionally - either to old order state or starting state\r\n\r\n  const [orderState, setOrderState] = useState({\r\n    totalPrice: props.location.state\r\n      ? props.location.state.order.totalPrice\r\n      : 5,\r\n    chosenToppings: props.location.state\r\n      ? props.location.state.order.chosenToppings\r\n      : [],\r\n  });\r\n\r\n  // EVENT HANDLERS - ADD TOPPING\r\n\r\n  const addToppingHandler = (id) => {\r\n    let order = { ...orderState };\r\n\r\n    // find the chosen topping in the menu\r\n    const menuIndex = menuState.toppings.findIndex(\r\n      (topping) => topping.id === id\r\n    );\r\n\r\n    // check if the topping has already been added to the orderToppings array\r\n    const orderIndex = order.chosenToppings.findIndex(\r\n      (topping) => topping.id === id\r\n    );\r\n\r\n    // if so, increase its count by 1\r\n    if (orderIndex > -1) {\r\n      order.chosenToppings[orderIndex].count++;\r\n    }\r\n    // otherwise (i.e. this topping is being added for the first time)\r\n    // create this topping and add it to the order toppings array\r\n    else {\r\n      // Save the id, name and price of the chosen topping; set its count to 1\r\n      const chosenTopping = {\r\n        id: menuState.toppings[menuIndex].id,\r\n        name: menuState.toppings[menuIndex].alt,\r\n        price: menuState.toppings[menuIndex].price,\r\n        count: 1,\r\n      };\r\n      order.chosenToppings.push(chosenTopping);\r\n    }\r\n\r\n    // Calculate the new price\r\n    const newPrice =\r\n      orderState.totalPrice + menuState.toppings[menuIndex].price;\r\n\r\n    // Update the order state with the new price and updated toppings array\r\n    setOrderState({\r\n      totalPrice: newPrice,\r\n      chosenToppings: order.chosenToppings,\r\n    });\r\n  };\r\n\r\n  // EVENT HANDLERS - REMOVE TOPPING\r\n\r\n  const removeToppingHandler = (id) => {\r\n    let order = { ...orderState };\r\n\r\n    // Find topping with matching id from the orderToppings\r\n    const index = order.chosenToppings.findIndex(\r\n      (topping) => topping.id === id\r\n    );\r\n\r\n    // Get the current price\r\n    let price = order.totalPrice;\r\n\r\n    // If topping was found, update the price and decrease the count\r\n    if (index >= 0) {\r\n      price = price - order.chosenToppings[index].price;\r\n      order.chosenToppings[index].count--;\r\n\r\n      // If the count is now 0, remove the topping completely\r\n      if (order.chosenToppings[index].count < 1) {\r\n        order.chosenToppings.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    // Update order state with updated price and updated toppings array\r\n    setOrderState({\r\n      totalPrice: price,\r\n      chosenToppings: order.chosenToppings,\r\n    });\r\n  };\r\n\r\n  // EVENT HANDLERS - CHECK OUT\r\n\r\n  const checkoutHandler = () => {\r\n    props.history.push({\r\n      pathname: \"place-order\",\r\n      state: {\r\n        order: orderState,\r\n        menu: menuState.toppings,\r\n      },\r\n    });\r\n  };\r\n\r\n  // ERROR HANDLER\r\n\r\n  const errorHandler = () => {\r\n    setErrorState({\r\n      error: false,\r\n      errorMessage: null,\r\n    });\r\n    setLoadingState({\r\n      isLoading: false,\r\n      loadFailed: true,\r\n    });\r\n  };\r\n\r\n  // DISABLE CHECKOUT BUTTON IF NO TOPPINGS CHOSEN\r\n\r\n  let checkoutDisabled = true;\r\n\r\n  if (orderState.chosenToppings.length > 0) {\r\n    checkoutDisabled = false;\r\n  }\r\n\r\n  // DISPLAY PIZZA PAL MENU AND CONTROLS\r\n\r\n  let pizzapalMenu = errorState.error ? (\r\n    <ErrorModal error={errorState.errorMessage} onClear={errorHandler} />\r\n  ) : (\r\n    <Loader active={loadingState.isLoading} />\r\n  );\r\n\r\n  if (menuState.toppings.length > 0) {\r\n    pizzapalMenu = (\r\n      <Grid divided=\"vertically\" stackable>\r\n        <Grid.Row centered>\r\n          <Menu menu={menuState.toppings} />\r\n        </Grid.Row>\r\n        <Order\r\n          menu={menuState.toppings}\r\n          toppingAdded={addToppingHandler}\r\n          toppingRemoved={removeToppingHandler}\r\n          chosenToppings={orderState.chosenToppings}\r\n          totalPrice={orderState.totalPrice}\r\n          checkout={checkoutHandler}\r\n          disabled={checkoutDisabled}\r\n        />\r\n      </Grid>\r\n    );\r\n  } else if (loadingState.loadFailed) {\r\n    pizzapalMenu = (\r\n      <p>\r\n        We're having some issues loading the menu... Please try again later.\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return <div>{pizzapalMenu}</div>;\r\n};\r\n\r\nexport default PizzaPal;\r\n"]},"metadata":{},"sourceType":"module"}