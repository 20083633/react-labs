{"ast":null,"code":"import _slicedToArray from\"C:/Users/niall/Documents/GitHub/react-labs/mern-lab-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState,useEffect}from\"react\";import{Container}from\"semantic-ui-react\";import{Route,Switch,useHistory}from\"react-router-dom\";import\"./Layout.css\";import Nav from\"../Nav/Nav\";import PizzaPal from\"../../containers/PizzaPal/PizzaPal\";import YourOrders from\"../../containers/YourOrders/YourOrders\";import PlaceOrder from\"../../containers/PlaceOrder/PlaceOrder\";import OrderSuccess from\"../../containers/PlaceOrder/OrderSuccess/OrderSuccess\";import Authenticate from\"../../containers/Authenticate/Authenticate\";import YourAccount from\"../../containers/YourAccount/YourAccount\";import AccountUpdate from\"../../containers/YourAccount/AccountUpdate/AccountUpdate\";import AuthContext from\"../../context/auth-context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Layout=function Layout(props){var _useState=useState({isLoggedIn:false}),_useState2=_slicedToArray(_useState,2),loggedInState=_useState2[0],setLoggedInState=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),token=_useState4[0],setToken=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),userId=_useState6[0],setUserId=_useState6[1];var history=useHistory;var login=useCallback(function(uid,token){setToken(token);setUserId(uid);localStorage.setItem(\"userData\",JSON.stringify({userId:uid,token:token}));},[]);var logout=useCallback(function(){setToken(null);setUserId(null);localStorage.removeItem(\"userData\");history.push(\"/\");},[]);useEffect(function(){var storedData=JSON.parse(localStorage.getItem(\"userData\"));if(storedData&&storedData.token){login(storedData.userId,storedData.token);}},[login]);var routes;if(token){routes=/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,component:PizzaPal}),/*#__PURE__*/_jsx(Route,{path:\"/orders/:uid\",component:YourOrders}),/*#__PURE__*/_jsx(Route,{path:\"/place-order\",component:PlaceOrder}),/*#__PURE__*/_jsx(Route,{path:\"/order-success\",component:OrderSuccess}),/*#__PURE__*/_jsx(Route,{path:\"/users/:uid\",component:YourAccount}),/*#__PURE__*/_jsx(Route,{path:\"/update-account\",component:AccountUpdate})]});}else{routes=/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,component:PizzaPal}),/*#__PURE__*/_jsx(Route,{path:\"/authenticate\",component:Authenticate})]});}return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isLoggedIn:!!token,token:token,userId:userId,login:login,logout:logout},children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Nav,{}),routes]})});};export default Layout;","map":{"version":3,"sources":["C:/Users/niall/Documents/GitHub/react-labs/mern-lab-3/frontend/src/components/Layout/Layout.js"],"names":["React","useCallback","useState","useEffect","Container","Route","Switch","useHistory","Nav","PizzaPal","YourOrders","PlaceOrder","OrderSuccess","Authenticate","YourAccount","AccountUpdate","AuthContext","Layout","props","isLoggedIn","loggedInState","setLoggedInState","token","setToken","userId","setUserId","history","login","uid","localStorage","setItem","JSON","stringify","logout","removeItem","push","storedData","parse","getItem","routes"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\n\r\nimport \"./Layout.css\";\r\n\r\nimport Nav from \"../Nav/Nav\";\r\nimport PizzaPal from \"../../containers/PizzaPal/PizzaPal\";\r\nimport YourOrders from \"../../containers/YourOrders/YourOrders\";\r\nimport PlaceOrder from \"../../containers/PlaceOrder/PlaceOrder\";\r\nimport OrderSuccess from \"../../containers/PlaceOrder/OrderSuccess/OrderSuccess\";\r\nimport Authenticate from \"../../containers/Authenticate/Authenticate\";\r\nimport YourAccount from \"../../containers/YourAccount/YourAccount\";\r\nimport AccountUpdate from \"../../containers/YourAccount/AccountUpdate/AccountUpdate\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nconst Layout = (props) => {\r\n\r\n  const [loggedInState, setLoggedInState] = useState({isLoggedIn: false});\r\n  const [token, setToken] = useState(false);\r\n  const [userId, setUserId] = useState(false);\r\n  const history = useHistory;\r\n  const login = useCallback((uid, token) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n    history.push(\"/\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if ( storedData && storedData.token ) {\r\n      login(storedData.userId, storedData.token);\r\n    }\r\n  }, [login]);\r\n\r\n  let routes;\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={PizzaPal} />\r\n        <Route path=\"/orders/:uid\" component={YourOrders} />\r\n        <Route path=\"/place-order\" component={PlaceOrder} />\r\n        <Route path=\"/order-success\" component={OrderSuccess} />\r\n        <Route path=\"/users/:uid\" component={YourAccount} />\r\n        <Route path=\"/update-account\" component={AccountUpdate} />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={PizzaPal} />\r\n        <Route path=\"/authenticate\" component={Authenticate} />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout,\r\n      }}\r\n    >\r\n      <Container>\r\n        <Nav />\r\n        {routes}\r\n      </Container>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}