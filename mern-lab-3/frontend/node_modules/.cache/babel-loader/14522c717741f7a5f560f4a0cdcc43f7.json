{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niall\\\\Documents\\\\GitHub\\\\react-labs\\\\mern-lab-3\\\\frontend\\\\src\\\\components\\\\Layout\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect, Suspense } from \"react\";\nimport Loader from '../Feedback/Loader/Loader';\nimport { Container } from \"semantic-ui-react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport \"./Layout.css\";\nimport Nav from \"../Nav/Nav\";\nimport PizzaPal from \"../../containers/PizzaPal/PizzaPal\";\nimport AuthContext from \"../../context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourOrders = /*#__PURE__*/React.lazy(_c = () => import(\"../../containers/YourOrders/YourOrders\"));\n_c2 = YourOrders;\nconst PlaceOrder = /*#__PURE__*/React.lazy(_c3 = () => import(\"../../containers/PlaceOrder/PlaceOrder\"));\n_c4 = PlaceOrder;\nconst OrderSuccess = /*#__PURE__*/React.lazy(_c5 = () => import(\"../../containers/PlaceOrder/OrderSuccess/OrderSuccess\"));\n_c6 = OrderSuccess;\nconst Authenticate = /*#__PURE__*/React.lazy(_c7 = () => import(\"../../containers/Authenticate/Authenticate\"));\n_c8 = Authenticate;\nconst YourAccount = /*#__PURE__*/React.lazy(_c9 = () => import(\"../../containers/YourAccount/YourAccount\"));\n_c10 = YourAccount;\nconst AccountUpdate = /*#__PURE__*/React.lazy(_c11 = () => import(\"../../containers/YourAccount/AccountUpdate/AccountUpdate\"));\n_c12 = AccountUpdate;\n\nconst Layout = props => {\n  _s();\n\n  const [loggedInState, setLoggedInState] = useState({\n    isLoggedIn: false\n  });\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState(false);\n  const history = useHistory;\n  const login = useCallback((uid, token) => {\n    setToken(token);\n    setUserId(uid);\n    localStorage.setItem(\"userData\", JSON.stringify({\n      userId: uid,\n      token: token\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n    history.push(\"/\");\n  }, []);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n\n    if (storedData && storedData.token) {\n      login(storedData.userId, storedData.token);\n    }\n  }, [login]);\n  let routes;\n\n  if (token) {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: PizzaPal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/orders/:uid\",\n        component: YourOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/place-order\",\n        component: PlaceOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/order-success\",\n        component: OrderSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users/:uid\",\n        component: YourAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/update-account\",\n        component: AccountUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  } else {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: PizzaPal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/authenticate\",\n        component: Authenticate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: !!token,\n      token: token,\n      userId: userId,\n      login: login,\n      logout: logout\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            active: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this),\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Layout, \"h61QiwlI+4+IkefGIG5RiTy76ZM=\");\n\n_c13 = Layout;\nexport default Layout;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"YourOrders$React.lazy\");\n$RefreshReg$(_c2, \"YourOrders\");\n$RefreshReg$(_c3, \"PlaceOrder$React.lazy\");\n$RefreshReg$(_c4, \"PlaceOrder\");\n$RefreshReg$(_c5, \"OrderSuccess$React.lazy\");\n$RefreshReg$(_c6, \"OrderSuccess\");\n$RefreshReg$(_c7, \"Authenticate$React.lazy\");\n$RefreshReg$(_c8, \"Authenticate\");\n$RefreshReg$(_c9, \"YourAccount$React.lazy\");\n$RefreshReg$(_c10, \"YourAccount\");\n$RefreshReg$(_c11, \"AccountUpdate$React.lazy\");\n$RefreshReg$(_c12, \"AccountUpdate\");\n$RefreshReg$(_c13, \"Layout\");","map":{"version":3,"sources":["C:/Users/niall/Documents/GitHub/react-labs/mern-lab-3/frontend/src/components/Layout/Layout.js"],"names":["React","useCallback","useState","useEffect","Suspense","Loader","Container","Route","Switch","useHistory","Nav","PizzaPal","AuthContext","YourOrders","lazy","PlaceOrder","OrderSuccess","Authenticate","YourAccount","AccountUpdate","Layout","props","loggedInState","setLoggedInState","isLoggedIn","token","setToken","userId","setUserId","history","login","uid","localStorage","setItem","JSON","stringify","logout","removeItem","push","storedData","parse","getItem","routes"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, Suspense } from \"react\";\r\nimport Loader from '../Feedback/Loader/Loader';\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\n\r\nimport \"./Layout.css\";\r\n\r\nimport Nav from \"../Nav/Nav\";\r\nimport PizzaPal from \"../../containers/PizzaPal/PizzaPal\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nconst YourOrders = React.lazy(() => import(\"../../containers/YourOrders/YourOrders\"));\r\nconst PlaceOrder = React.lazy(() => import(\"../../containers/PlaceOrder/PlaceOrder\"));\r\nconst OrderSuccess = React.lazy(() => import(\"../../containers/PlaceOrder/OrderSuccess/OrderSuccess\"));\r\nconst Authenticate = React.lazy(() => import(\"../../containers/Authenticate/Authenticate\"));\r\nconst YourAccount = React.lazy(() => import(\"../../containers/YourAccount/YourAccount\"));\r\nconst AccountUpdate = React.lazy(() => import(\"../../containers/YourAccount/AccountUpdate/AccountUpdate\"));\r\n\r\n\r\nconst Layout = (props) => {\r\n\r\n  const [loggedInState, setLoggedInState] = useState({isLoggedIn: false});\r\n  const [token, setToken] = useState(false);\r\n  const [userId, setUserId] = useState(false);\r\n  const history = useHistory;\r\n  const login = useCallback((uid, token) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n    history.push(\"/\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if ( storedData && storedData.token ) {\r\n      login(storedData.userId, storedData.token);\r\n    }\r\n  }, [login]);\r\n\r\n  let routes;\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={PizzaPal} />\r\n        <Route path=\"/orders/:uid\" component={YourOrders} />\r\n        <Route path=\"/place-order\" component={PlaceOrder} />\r\n        <Route path=\"/order-success\" component={OrderSuccess} />\r\n        <Route path=\"/users/:uid\" component={YourAccount} />\r\n        <Route path=\"/update-account\" component={AccountUpdate} />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={PizzaPal} />\r\n        <Route path=\"/authenticate\" component={Authenticate} />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout,\r\n      }}\r\n    >\r\n      <Container>\r\n        <Nav />\r\n        <Suspense fallback={<div><Loader active='true' /></div>}>\r\n          {routes}\r\n      </Suspense>\r\n      </Container>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}